// JWT ÌÜ†ÌÅ∞ ÏûêÎèô Í∞±Ïã† Ïú†Ìã∏Î¶¨Ìã∞

let refreshTimer = null;

// ÌÜ†ÌÅ∞ Í∞±Ïã† Ìï®Ïàò
export const refreshToken = async () => {
  try {
    const response = await fetch('https://us-central1-marlang-app.cloudfunctions.net/refreshJWTToken', {
      method: 'POST',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ ÌÜ†ÌÅ∞ ÏûêÎèô Í∞±Ïã† ÏÑ±Í≥µ:', data.user.email);
      return data.user;
    } else {
      console.log('‚ùå ÌÜ†ÌÅ∞ Í∞±Ïã† Ïã§Ìå®:', response.status);
      return null;
    }
  } catch (error) {
    console.error('ÌÜ†ÌÅ∞ Í∞±Ïã† Ï§ë Ïò§Î•ò:', error);
    return null;
  }
};

// ÌÜ†ÌÅ∞ Í∞±Ïã† ÌÉÄÏù¥Î®∏ ÏãúÏûë (13Î∂ÑÎßàÎã§ Í∞±Ïã† - 15Î∂Ñ ÎßåÎ£å Ï†ÑÏóê)
export const startTokenRefresh = () => {
  if (refreshTimer) {
    clearInterval(refreshTimer);
  }

  refreshTimer = setInterval(async () => {
    console.log('üîÑ ÏûêÎèô ÌÜ†ÌÅ∞ Í∞±Ïã† ÏãúÎèÑ...');
    const user = await refreshToken();
    
    if (!user) {
      console.log('ÌÜ†ÌÅ∞ Í∞±Ïã† Ïã§Ìå®, ÌÉÄÏù¥Î®∏ Ï§ëÏßÄ');
      stopTokenRefresh();
      // Î°úÍ∑∏ÏïÑÏõÉ Ï≤òÎ¶¨ (Î¨¥Ìïú ÏÉàÎ°úÍ≥†Ïπ® Î∞©ÏßÄ)
      localStorage.removeItem('naverAuthUser');
      sessionStorage.setItem('authError', 'token_refresh_failed');
      window.location.href = '/';
    }
  }, 13 * 60 * 1000); // 13Î∂Ñ

  console.log('üîÑ ÌÜ†ÌÅ∞ ÏûêÎèô Í∞±Ïã† ÌÉÄÏù¥Î®∏ ÏãúÏûë');
};

// ÌÜ†ÌÅ∞ Í∞±Ïã† ÌÉÄÏù¥Î®∏ Ï§ëÏßÄ
export const stopTokenRefresh = () => {
  if (refreshTimer) {
    clearInterval(refreshTimer);
    refreshTimer = null;
    console.log('üõë ÌÜ†ÌÅ∞ ÏûêÎèô Í∞±Ïã† ÌÉÄÏù¥Î®∏ Ï§ëÏßÄ');
  }
};

// ÌÜ†ÌÅ∞ Í≤ÄÏ¶ù Ìï®Ïàò
export const verifyToken = async () => {
  try {
    const response = await fetch('https://us-central1-marlang-app.cloudfunctions.net/verifyJWTToken', {
      method: 'GET',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (response.ok) {
      const data = await response.json();
      return data.user;
    } else {
      return null;
    }
  } catch (error) {
    console.error('ÌÜ†ÌÅ∞ Í≤ÄÏ¶ù Ï§ë Ïò§Î•ò:', error);
    return null;
  }
};